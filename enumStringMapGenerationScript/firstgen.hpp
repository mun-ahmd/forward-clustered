#pragma once
#include <unordered_map>
#include <iostream>
#include <assert.h>
#include <string>
#include <vulkan/vulkan.hpp>
namespace Rendering {
    inline static unordered_map<string, VkCompareOp> VkCompareOpMap = {
		{"never", VK_COMPARE_OP_NEVER},
		{"less", VK_COMPARE_OP_LESS},
		{"equal", VK_COMPARE_OP_EQUAL},
		{"lessOrEqual", VK_COMPARE_OP_LESS_OR_EQUAL},
		{"greater", VK_COMPARE_OP_GREATER},
		{"notEqual", VK_COMPARE_OP_NOT_EQUAL},
		{"greaterOrEqual", VK_COMPARE_OP_GREATER_OR_EQUAL},
		{"always", VK_COMPARE_OP_ALWAYS},
		{"maxEnum", VK_COMPARE_OP_MAX_ENUM}
	}
	inline VkCompareOp CompareOpFromString(std::string enumName) {
	    return getEnumFromString(VkCompareOpMap, enumName);
	}
	inline static unordered_map<string, VkDescriptorType> VkDescriptorTypeMap = {
		{"sampler", VK_DESCRIPTOR_TYPE_SAMPLER},
		{"combinedImageSampler", VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER},
		{"sampledImage", VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE},
		{"storageImage", VK_DESCRIPTOR_TYPE_STORAGE_IMAGE},
		{"uniformTexelBuffer", VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER},
		{"storageTexelBuffer", VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER},
		{"uniformBuffer", VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER},
		{"storageBuffer", VK_DESCRIPTOR_TYPE_STORAGE_BUFFER},
		{"uniformBufferDynamic", VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC},
		{"storageBufferDynamic", VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC},
		{"inputAttachment", VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT},
		{"inlineUniformBlock", VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK},
		{"accelerationStructureKhr", VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR},
		{"accelerationStructureNv", VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV},
		{"sampleWeightImageQcom", VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM},
		{"blockMatchImageQcom", VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM},
		{"mutableExt", VK_DESCRIPTOR_TYPE_MUTABLE_EXT},
		{"inlineUniformBlockExt", VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT},
		{"mutableValve", VK_DESCRIPTOR_TYPE_MUTABLE_VALVE},
		{"maxEnum", VK_DESCRIPTOR_TYPE_MAX_ENUM}
	}
	inline VkDescriptorType DescriptorTypeFromString(std::string enumName) {
	    return getEnumFromString(VkDescriptorTypeMap, enumName);
	}
	inline static unordered_map<string, VkFormat> VkFormatMap = {
		{"undefined", VK_FORMAT_UNDEFINED},
		{"r4g4UnormPack8", VK_FORMAT_R4G4_UNORM_PACK8},
		{"r4g4b4a4UnormPack16", VK_FORMAT_R4G4B4A4_UNORM_PACK16},
		{"b4g4r4a4UnormPack16", VK_FORMAT_B4G4R4A4_UNORM_PACK16},
		{"r5g6b5UnormPack16", VK_FORMAT_R5G6B5_UNORM_PACK16},
		{"b5g6r5UnormPack16", VK_FORMAT_B5G6R5_UNORM_PACK16},
		{"r5g5b5a1UnormPack16", VK_FORMAT_R5G5B5A1_UNORM_PACK16},
		{"b5g5r5a1UnormPack16", VK_FORMAT_B5G5R5A1_UNORM_PACK16},
		{"a1r5g5b5UnormPack16", VK_FORMAT_A1R5G5B5_UNORM_PACK16},
		{"r8Unorm", VK_FORMAT_R8_UNORM},
		{"r8Snorm", VK_FORMAT_R8_SNORM},
		{"r8Uscaled", VK_FORMAT_R8_USCALED},
		{"r8Sscaled", VK_FORMAT_R8_SSCALED},
		{"r8Uint", VK_FORMAT_R8_UINT},
		{"r8Sint", VK_FORMAT_R8_SINT},
		{"r8Srgb", VK_FORMAT_R8_SRGB},
		{"r8g8Unorm", VK_FORMAT_R8G8_UNORM},
		{"r8g8Snorm", VK_FORMAT_R8G8_SNORM},
		{"r8g8Uscaled", VK_FORMAT_R8G8_USCALED},
		{"r8g8Sscaled", VK_FORMAT_R8G8_SSCALED},
		{"r8g8Uint", VK_FORMAT_R8G8_UINT},
		{"r8g8Sint", VK_FORMAT_R8G8_SINT},
		{"r8g8Srgb", VK_FORMAT_R8G8_SRGB},
		{"r8g8b8Unorm", VK_FORMAT_R8G8B8_UNORM},
		{"r8g8b8Snorm", VK_FORMAT_R8G8B8_SNORM},
		{"r8g8b8Uscaled", VK_FORMAT_R8G8B8_USCALED},
		{"r8g8b8Sscaled", VK_FORMAT_R8G8B8_SSCALED},
		{"r8g8b8Uint", VK_FORMAT_R8G8B8_UINT},
		{"r8g8b8Sint", VK_FORMAT_R8G8B8_SINT},
		{"r8g8b8Srgb", VK_FORMAT_R8G8B8_SRGB},
		{"b8g8r8Unorm", VK_FORMAT_B8G8R8_UNORM},
		{"b8g8r8Snorm", VK_FORMAT_B8G8R8_SNORM},
		{"b8g8r8Uscaled", VK_FORMAT_B8G8R8_USCALED},
		{"b8g8r8Sscaled", VK_FORMAT_B8G8R8_SSCALED},
		{"b8g8r8Uint", VK_FORMAT_B8G8R8_UINT},
		{"b8g8r8Sint", VK_FORMAT_B8G8R8_SINT},
		{"b8g8r8Srgb", VK_FORMAT_B8G8R8_SRGB},
		{"r8g8b8a8Unorm", VK_FORMAT_R8G8B8A8_UNORM},
		{"r8g8b8a8Snorm", VK_FORMAT_R8G8B8A8_SNORM},
		{"r8g8b8a8Uscaled", VK_FORMAT_R8G8B8A8_USCALED},
		{"r8g8b8a8Sscaled", VK_FORMAT_R8G8B8A8_SSCALED},
		{"r8g8b8a8Uint", VK_FORMAT_R8G8B8A8_UINT},
		{"r8g8b8a8Sint", VK_FORMAT_R8G8B8A8_SINT},
		{"r8g8b8a8Srgb", VK_FORMAT_R8G8B8A8_SRGB},
		{"b8g8r8a8Unorm", VK_FORMAT_B8G8R8A8_UNORM},
		{"b8g8r8a8Snorm", VK_FORMAT_B8G8R8A8_SNORM},
		{"b8g8r8a8Uscaled", VK_FORMAT_B8G8R8A8_USCALED},
		{"b8g8r8a8Sscaled", VK_FORMAT_B8G8R8A8_SSCALED},
		{"b8g8r8a8Uint", VK_FORMAT_B8G8R8A8_UINT},
		{"b8g8r8a8Sint", VK_FORMAT_B8G8R8A8_SINT},
		{"b8g8r8a8Srgb", VK_FORMAT_B8G8R8A8_SRGB},
		{"a8b8g8r8UnormPack32", VK_FORMAT_A8B8G8R8_UNORM_PACK32},
		{"a8b8g8r8SnormPack32", VK_FORMAT_A8B8G8R8_SNORM_PACK32},
		{"a8b8g8r8UscaledPack32", VK_FORMAT_A8B8G8R8_USCALED_PACK32},
		{"a8b8g8r8SscaledPack32", VK_FORMAT_A8B8G8R8_SSCALED_PACK32},
		{"a8b8g8r8UintPack32", VK_FORMAT_A8B8G8R8_UINT_PACK32},
		{"a8b8g8r8SintPack32", VK_FORMAT_A8B8G8R8_SINT_PACK32},
		{"a8b8g8r8SrgbPack32", VK_FORMAT_A8B8G8R8_SRGB_PACK32},
		{"a2r10g10b10UnormPack32", VK_FORMAT_A2R10G10B10_UNORM_PACK32},
		{"a2r10g10b10SnormPack32", VK_FORMAT_A2R10G10B10_SNORM_PACK32},
		{"a2r10g10b10UscaledPack32", VK_FORMAT_A2R10G10B10_USCALED_PACK32},
		{"a2r10g10b10SscaledPack32", VK_FORMAT_A2R10G10B10_SSCALED_PACK32},
		{"a2r10g10b10UintPack32", VK_FORMAT_A2R10G10B10_UINT_PACK32},
		{"a2r10g10b10SintPack32", VK_FORMAT_A2R10G10B10_SINT_PACK32},
		{"a2b10g10r10UnormPack32", VK_FORMAT_A2B10G10R10_UNORM_PACK32},
		{"a2b10g10r10SnormPack32", VK_FORMAT_A2B10G10R10_SNORM_PACK32},
		{"a2b10g10r10UscaledPack32", VK_FORMAT_A2B10G10R10_USCALED_PACK32},
		{"a2b10g10r10SscaledPack32", VK_FORMAT_A2B10G10R10_SSCALED_PACK32},
		{"a2b10g10r10UintPack32", VK_FORMAT_A2B10G10R10_UINT_PACK32},
		{"a2b10g10r10SintPack32", VK_FORMAT_A2B10G10R10_SINT_PACK32},
		{"r16Unorm", VK_FORMAT_R16_UNORM},
		{"r16Snorm", VK_FORMAT_R16_SNORM},
		{"r16Uscaled", VK_FORMAT_R16_USCALED},
		{"r16Sscaled", VK_FORMAT_R16_SSCALED},
		{"r16Uint", VK_FORMAT_R16_UINT},
		{"r16Sint", VK_FORMAT_R16_SINT},
		{"r16Sfloat", VK_FORMAT_R16_SFLOAT},
		{"r16g16Unorm", VK_FORMAT_R16G16_UNORM},
		{"r16g16Snorm", VK_FORMAT_R16G16_SNORM},
		{"r16g16Uscaled", VK_FORMAT_R16G16_USCALED},
		{"r16g16Sscaled", VK_FORMAT_R16G16_SSCALED},
		{"r16g16Uint", VK_FORMAT_R16G16_UINT},
		{"r16g16Sint", VK_FORMAT_R16G16_SINT},
		{"r16g16Sfloat", VK_FORMAT_R16G16_SFLOAT},
		{"r16g16b16Unorm", VK_FORMAT_R16G16B16_UNORM},
		{"r16g16b16Snorm", VK_FORMAT_R16G16B16_SNORM},
		{"r16g16b16Uscaled", VK_FORMAT_R16G16B16_USCALED},
		{"r16g16b16Sscaled", VK_FORMAT_R16G16B16_SSCALED},
		{"r16g16b16Uint", VK_FORMAT_R16G16B16_UINT},
		{"r16g16b16Sint", VK_FORMAT_R16G16B16_SINT},
		{"r16g16b16Sfloat", VK_FORMAT_R16G16B16_SFLOAT},
		{"r16g16b16a16Unorm", VK_FORMAT_R16G16B16A16_UNORM},
		{"r16g16b16a16Snorm", VK_FORMAT_R16G16B16A16_SNORM},
		{"r16g16b16a16Uscaled", VK_FORMAT_R16G16B16A16_USCALED},
		{"r16g16b16a16Sscaled", VK_FORMAT_R16G16B16A16_SSCALED},
		{"r16g16b16a16Uint", VK_FORMAT_R16G16B16A16_UINT},
		{"r16g16b16a16Sint", VK_FORMAT_R16G16B16A16_SINT},
		{"r16g16b16a16Sfloat", VK_FORMAT_R16G16B16A16_SFLOAT},
		{"r32Uint", VK_FORMAT_R32_UINT},
		{"r32Sint", VK_FORMAT_R32_SINT},
		{"r32Sfloat", VK_FORMAT_R32_SFLOAT},
		{"r32g32Uint", VK_FORMAT_R32G32_UINT},
		{"r32g32Sint", VK_FORMAT_R32G32_SINT},
		{"r32g32Sfloat", VK_FORMAT_R32G32_SFLOAT},
		{"r32g32b32Uint", VK_FORMAT_R32G32B32_UINT},
		{"r32g32b32Sint", VK_FORMAT_R32G32B32_SINT},
		{"r32g32b32Sfloat", VK_FORMAT_R32G32B32_SFLOAT},
		{"r32g32b32a32Uint", VK_FORMAT_R32G32B32A32_UINT},
		{"r32g32b32a32Sint", VK_FORMAT_R32G32B32A32_SINT},
		{"r32g32b32a32Sfloat", VK_FORMAT_R32G32B32A32_SFLOAT},
		{"r64Uint", VK_FORMAT_R64_UINT},
		{"r64Sint", VK_FORMAT_R64_SINT},
		{"r64Sfloat", VK_FORMAT_R64_SFLOAT},
		{"r64g64Uint", VK_FORMAT_R64G64_UINT},
		{"r64g64Sint", VK_FORMAT_R64G64_SINT},
		{"r64g64Sfloat", VK_FORMAT_R64G64_SFLOAT},
		{"r64g64b64Uint", VK_FORMAT_R64G64B64_UINT},
		{"r64g64b64Sint", VK_FORMAT_R64G64B64_SINT},
		{"r64g64b64Sfloat", VK_FORMAT_R64G64B64_SFLOAT},
		{"r64g64b64a64Uint", VK_FORMAT_R64G64B64A64_UINT},
		{"r64g64b64a64Sint", VK_FORMAT_R64G64B64A64_SINT},
		{"r64g64b64a64Sfloat", VK_FORMAT_R64G64B64A64_SFLOAT},
		{"b10g11r11UfloatPack32", VK_FORMAT_B10G11R11_UFLOAT_PACK32},
		{"e5b9g9r9UfloatPack32", VK_FORMAT_E5B9G9R9_UFLOAT_PACK32},
		{"d16Unorm", VK_FORMAT_D16_UNORM},
		{"x8D24UnormPack32", VK_FORMAT_X8_D24_UNORM_PACK32},
		{"d32Sfloat", VK_FORMAT_D32_SFLOAT},
		{"s8Uint", VK_FORMAT_S8_UINT},
		{"d16UnormS8Uint", VK_FORMAT_D16_UNORM_S8_UINT},
		{"d24UnormS8Uint", VK_FORMAT_D24_UNORM_S8_UINT},
		{"d32SfloatS8Uint", VK_FORMAT_D32_SFLOAT_S8_UINT},
		{"bc1RgbUnormBlock", VK_FORMAT_BC1_RGB_UNORM_BLOCK},
		{"bc1RgbSrgbBlock", VK_FORMAT_BC1_RGB_SRGB_BLOCK},
		{"bc1RgbaUnormBlock", VK_FORMAT_BC1_RGBA_UNORM_BLOCK},
		{"bc1RgbaSrgbBlock", VK_FORMAT_BC1_RGBA_SRGB_BLOCK},
		{"bc2UnormBlock", VK_FORMAT_BC2_UNORM_BLOCK},
		{"bc2SrgbBlock", VK_FORMAT_BC2_SRGB_BLOCK},
		{"bc3UnormBlock", VK_FORMAT_BC3_UNORM_BLOCK},
		{"bc3SrgbBlock", VK_FORMAT_BC3_SRGB_BLOCK},
		{"bc4UnormBlock", VK_FORMAT_BC4_UNORM_BLOCK},
		{"bc4SnormBlock", VK_FORMAT_BC4_SNORM_BLOCK},
		{"bc5UnormBlock", VK_FORMAT_BC5_UNORM_BLOCK},
		{"bc5SnormBlock", VK_FORMAT_BC5_SNORM_BLOCK},
		{"bc6hUfloatBlock", VK_FORMAT_BC6H_UFLOAT_BLOCK},
		{"bc6hSfloatBlock", VK_FORMAT_BC6H_SFLOAT_BLOCK},
		{"bc7UnormBlock", VK_FORMAT_BC7_UNORM_BLOCK},
		{"bc7SrgbBlock", VK_FORMAT_BC7_SRGB_BLOCK},
		{"etc2R8g8b8UnormBlock", VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK},
		{"etc2R8g8b8SrgbBlock", VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK},
		{"etc2R8g8b8a1UnormBlock", VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK},
		{"etc2R8g8b8a1SrgbBlock", VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK},
		{"etc2R8g8b8a8UnormBlock", VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK},
		{"etc2R8g8b8a8SrgbBlock", VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK},
		{"eacR11UnormBlock", VK_FORMAT_EAC_R11_UNORM_BLOCK},
		{"eacR11SnormBlock", VK_FORMAT_EAC_R11_SNORM_BLOCK},
		{"eacR11g11UnormBlock", VK_FORMAT_EAC_R11G11_UNORM_BLOCK},
		{"eacR11g11SnormBlock", VK_FORMAT_EAC_R11G11_SNORM_BLOCK},
		{"astc4x4UnormBlock", VK_FORMAT_ASTC_4x4_UNORM_BLOCK},
		{"astc4x4SrgbBlock", VK_FORMAT_ASTC_4x4_SRGB_BLOCK},
		{"astc5x4UnormBlock", VK_FORMAT_ASTC_5x4_UNORM_BLOCK},
		{"astc5x4SrgbBlock", VK_FORMAT_ASTC_5x4_SRGB_BLOCK},
		{"astc5x5UnormBlock", VK_FORMAT_ASTC_5x5_UNORM_BLOCK},
		{"astc5x5SrgbBlock", VK_FORMAT_ASTC_5x5_SRGB_BLOCK},
		{"astc6x5UnormBlock", VK_FORMAT_ASTC_6x5_UNORM_BLOCK},
		{"astc6x5SrgbBlock", VK_FORMAT_ASTC_6x5_SRGB_BLOCK},
		{"astc6x6UnormBlock", VK_FORMAT_ASTC_6x6_UNORM_BLOCK},
		{"astc6x6SrgbBlock", VK_FORMAT_ASTC_6x6_SRGB_BLOCK},
		{"astc8x5UnormBlock", VK_FORMAT_ASTC_8x5_UNORM_BLOCK},
		{"astc8x5SrgbBlock", VK_FORMAT_ASTC_8x5_SRGB_BLOCK},
		{"astc8x6UnormBlock", VK_FORMAT_ASTC_8x6_UNORM_BLOCK},
		{"astc8x6SrgbBlock", VK_FORMAT_ASTC_8x6_SRGB_BLOCK},
		{"astc8x8UnormBlock", VK_FORMAT_ASTC_8x8_UNORM_BLOCK},
		{"astc8x8SrgbBlock", VK_FORMAT_ASTC_8x8_SRGB_BLOCK},
		{"astc10x5UnormBlock", VK_FORMAT_ASTC_10x5_UNORM_BLOCK},
		{"astc10x5SrgbBlock", VK_FORMAT_ASTC_10x5_SRGB_BLOCK},
		{"astc10x6UnormBlock", VK_FORMAT_ASTC_10x6_UNORM_BLOCK},
		{"astc10x6SrgbBlock", VK_FORMAT_ASTC_10x6_SRGB_BLOCK},
		{"astc10x8UnormBlock", VK_FORMAT_ASTC_10x8_UNORM_BLOCK},
		{"astc10x8SrgbBlock", VK_FORMAT_ASTC_10x8_SRGB_BLOCK},
		{"astc10x10UnormBlock", VK_FORMAT_ASTC_10x10_UNORM_BLOCK},
		{"astc10x10SrgbBlock", VK_FORMAT_ASTC_10x10_SRGB_BLOCK},
		{"astc12x10UnormBlock", VK_FORMAT_ASTC_12x10_UNORM_BLOCK},
		{"astc12x10SrgbBlock", VK_FORMAT_ASTC_12x10_SRGB_BLOCK},
		{"astc12x12UnormBlock", VK_FORMAT_ASTC_12x12_UNORM_BLOCK},
		{"astc12x12SrgbBlock", VK_FORMAT_ASTC_12x12_SRGB_BLOCK},
		{"g8b8g8r8422Unorm", VK_FORMAT_G8B8G8R8_422_UNORM},
		{"b8g8r8g8422Unorm", VK_FORMAT_B8G8R8G8_422_UNORM},
		{"g8B8R83plane420Unorm", VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM},
		{"g8B8r82plane420Unorm", VK_FORMAT_G8_B8R8_2PLANE_420_UNORM},
		{"g8B8R83plane422Unorm", VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM},
		{"g8B8r82plane422Unorm", VK_FORMAT_G8_B8R8_2PLANE_422_UNORM},
		{"g8B8R83plane444Unorm", VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM},
		{"r10x6UnormPack16", VK_FORMAT_R10X6_UNORM_PACK16},
		{"r10x6g10x6Unorm2pack16", VK_FORMAT_R10X6G10X6_UNORM_2PACK16},
		{"r10x6g10x6b10x6a10x6Unorm4pack16", VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16},
		{"g10x6b10x6g10x6r10x6422Unorm4pack16", VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16},
		{"b10x6g10x6r10x6g10x6422Unorm4pack16", VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16},
		{"g10x6B10x6R10x63plane420Unorm3pack16", VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16},
		{"g10x6B10x6r10x62plane420Unorm3pack16", VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16},
		{"g10x6B10x6R10x63plane422Unorm3pack16", VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16},
		{"g10x6B10x6r10x62plane422Unorm3pack16", VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16},
		{"g10x6B10x6R10x63plane444Unorm3pack16", VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16},
		{"r12x4UnormPack16", VK_FORMAT_R12X4_UNORM_PACK16},
		{"r12x4g12x4Unorm2pack16", VK_FORMAT_R12X4G12X4_UNORM_2PACK16},
		{"r12x4g12x4b12x4a12x4Unorm4pack16", VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16},
		{"g12x4b12x4g12x4r12x4422Unorm4pack16", VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16},
		{"b12x4g12x4r12x4g12x4422Unorm4pack16", VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16},
		{"g12x4B12x4R12x43plane420Unorm3pack16", VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16},
		{"g12x4B12x4r12x42plane420Unorm3pack16", VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16},
		{"g12x4B12x4R12x43plane422Unorm3pack16", VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16},
		{"g12x4B12x4r12x42plane422Unorm3pack16", VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16},
		{"g12x4B12x4R12x43plane444Unorm3pack16", VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16},
		{"g16b16g16r16422Unorm", VK_FORMAT_G16B16G16R16_422_UNORM},
		{"b16g16r16g16422Unorm", VK_FORMAT_B16G16R16G16_422_UNORM},
		{"g16B16R163plane420Unorm", VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM},
		{"g16B16r162plane420Unorm", VK_FORMAT_G16_B16R16_2PLANE_420_UNORM},
		{"g16B16R163plane422Unorm", VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM},
		{"g16B16r162plane422Unorm", VK_FORMAT_G16_B16R16_2PLANE_422_UNORM},
		{"g16B16R163plane444Unorm", VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM},
		{"g8B8r82plane444Unorm", VK_FORMAT_G8_B8R8_2PLANE_444_UNORM},
		{"g10x6B10x6r10x62plane444Unorm3pack16", VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16},
		{"g12x4B12x4r12x42plane444Unorm3pack16", VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16},
		{"g16B16r162plane444Unorm", VK_FORMAT_G16_B16R16_2PLANE_444_UNORM},
		{"a4r4g4b4UnormPack16", VK_FORMAT_A4R4G4B4_UNORM_PACK16},
		{"a4b4g4r4UnormPack16", VK_FORMAT_A4B4G4R4_UNORM_PACK16},
		{"astc4x4SfloatBlock", VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK},
		{"astc5x4SfloatBlock", VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK},
		{"astc5x5SfloatBlock", VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK},
		{"astc6x5SfloatBlock", VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK},
		{"astc6x6SfloatBlock", VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK},
		{"astc8x5SfloatBlock", VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK},
		{"astc8x6SfloatBlock", VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK},
		{"astc8x8SfloatBlock", VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK},
		{"astc10x5SfloatBlock", VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK},
		{"astc10x6SfloatBlock", VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK},
		{"astc10x8SfloatBlock", VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK},
		{"astc10x10SfloatBlock", VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK},
		{"astc12x10SfloatBlock", VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK},
		{"astc12x12SfloatBlock", VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK},
		{"pvrtc12bppUnormBlockImg", VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG},
		{"pvrtc14bppUnormBlockImg", VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG},
		{"pvrtc22bppUnormBlockImg", VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG},
		{"pvrtc24bppUnormBlockImg", VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG},
		{"pvrtc12bppSrgbBlockImg", VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG},
		{"pvrtc14bppSrgbBlockImg", VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG},
		{"pvrtc22bppSrgbBlockImg", VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG},
		{"pvrtc24bppSrgbBlockImg", VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG},
		{"r16g16S105Nv", VK_FORMAT_R16G16_S10_5_NV},
		{"a1b5g5r5UnormPack16Khr", VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR},
		{"a8UnormKhr", VK_FORMAT_A8_UNORM_KHR},
		{"astc4x4SfloatBlockExt", VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT},
		{"astc5x4SfloatBlockExt", VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT},
		{"astc5x5SfloatBlockExt", VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT},
		{"astc6x5SfloatBlockExt", VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT},
		{"astc6x6SfloatBlockExt", VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT},
		{"astc8x5SfloatBlockExt", VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT},
		{"astc8x6SfloatBlockExt", VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT},
		{"astc8x8SfloatBlockExt", VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT},
		{"astc10x5SfloatBlockExt", VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT},
		{"astc10x6SfloatBlockExt", VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT},
		{"astc10x8SfloatBlockExt", VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT},
		{"astc10x10SfloatBlockExt", VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT},
		{"astc12x10SfloatBlockExt", VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT},
		{"astc12x12SfloatBlockExt", VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT},
		{"g8b8g8r8422UnormKhr", VK_FORMAT_G8B8G8R8_422_UNORM_KHR},
		{"b8g8r8g8422UnormKhr", VK_FORMAT_B8G8R8G8_422_UNORM_KHR},
		{"g8B8R83plane420UnormKhr", VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR},
		{"g8B8r82plane420UnormKhr", VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR},
		{"g8B8R83plane422UnormKhr", VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR},
		{"g8B8r82plane422UnormKhr", VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR},
		{"g8B8R83plane444UnormKhr", VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR},
		{"r10x6UnormPack16Khr", VK_FORMAT_R10X6_UNORM_PACK16_KHR},
		{"r10x6g10x6Unorm2pack16Khr", VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR},
		{"r10x6g10x6b10x6a10x6Unorm4pack16Khr", VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR},
		{"g10x6b10x6g10x6r10x6422Unorm4pack16Khr", VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR},
		{"b10x6g10x6r10x6g10x6422Unorm4pack16Khr", VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR},
		{"g10x6B10x6R10x63plane420Unorm3pack16Khr", VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR},
		{"g10x6B10x6r10x62plane420Unorm3pack16Khr", VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR},
		{"g10x6B10x6R10x63plane422Unorm3pack16Khr", VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR},
		{"g10x6B10x6r10x62plane422Unorm3pack16Khr", VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR},
		{"g10x6B10x6R10x63plane444Unorm3pack16Khr", VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR},
		{"r12x4UnormPack16Khr", VK_FORMAT_R12X4_UNORM_PACK16_KHR},
		{"r12x4g12x4Unorm2pack16Khr", VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR},
		{"r12x4g12x4b12x4a12x4Unorm4pack16Khr", VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR},
		{"g12x4b12x4g12x4r12x4422Unorm4pack16Khr", VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR},
		{"b12x4g12x4r12x4g12x4422Unorm4pack16Khr", VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR},
		{"g12x4B12x4R12x43plane420Unorm3pack16Khr", VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR},
		{"g12x4B12x4r12x42plane420Unorm3pack16Khr", VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR},
		{"g12x4B12x4R12x43plane422Unorm3pack16Khr", VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR},
		{"g12x4B12x4r12x42plane422Unorm3pack16Khr", VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR},
		{"g12x4B12x4R12x43plane444Unorm3pack16Khr", VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR},
		{"g16b16g16r16422UnormKhr", VK_FORMAT_G16B16G16R16_422_UNORM_KHR},
		{"b16g16r16g16422UnormKhr", VK_FORMAT_B16G16R16G16_422_UNORM_KHR},
		{"g16B16R163plane420UnormKhr", VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR},
		{"g16B16r162plane420UnormKhr", VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR},
		{"g16B16R163plane422UnormKhr", VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR},
		{"g16B16r162plane422UnormKhr", VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR},
		{"g16B16R163plane444UnormKhr", VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR},
		{"g8B8r82plane444UnormExt", VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT},
		{"g10x6B10x6r10x62plane444Unorm3pack16Ext", VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT},
		{"g12x4B12x4r12x42plane444Unorm3pack16Ext", VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT},
		{"g16B16r162plane444UnormExt", VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT},
		{"a4r4g4b4UnormPack16Ext", VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT},
		{"a4b4g4r4UnormPack16Ext", VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT},
		{"maxEnum", VK_FORMAT_MAX_ENUM}
	}
	inline VkFormat FormatFromString(std::string enumName) {
	    return getEnumFromString(VkFormatMap, enumName);
	}
	inline static unordered_map<string, VkPipelineStageFlagBits> VkPipelineStageFlagBitsMap = {
		{"topOfPipe", VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT},
		{"drawIndirect", VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT},
		{"vertexInput", VK_PIPELINE_STAGE_VERTEX_INPUT_BIT},
		{"vertexShader", VK_PIPELINE_STAGE_VERTEX_SHADER_BIT},
		{"tessellationControlShader", VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT},
		{"tessellationEvaluationShader", VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT},
		{"geometryShader", VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT},
		{"fragmentShader", VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT},
		{"earlyFragmentTests", VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT},
		{"lateFragmentTests", VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT},
		{"colorAttachmentOutput", VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT},
		{"computeShader", VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT},
		{"transfer", VK_PIPELINE_STAGE_TRANSFER_BIT},
		{"bottomOfPipe", VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT},
		{"host", VK_PIPELINE_STAGE_HOST_BIT},
		{"allGraphics", VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT},
		{"allCommands", VK_PIPELINE_STAGE_ALL_COMMANDS_BIT},
		{"none", VK_PIPELINE_STAGE_NONE},
		{"transformFeedbackExt", VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT},
		{"conditionalRenderingExt", VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT},
		{"accelerationStructureBuildKhr", VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR},
		{"rayTracingShaderKhr", VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR},
		{"fragmentDensityProcessExt", VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT},
		{"fragmentShadingRateAttachmentKhr", VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR},
		{"commandPreprocessNv", VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV},
		{"taskShaderExt", VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT},
		{"meshShaderExt", VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT},
		{"shadingRateImageNv", VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV},
		{"rayTracingShaderNv", VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV},
		{"accelerationStructureBuildNv", VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV},
		{"taskShaderNv", VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV},
		{"meshShaderNv", VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV},
		{"noneKhr", VK_PIPELINE_STAGE_NONE_KHR},
		{"flagsMaxEnum", VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM}
	}
	inline VkPipelineStageFlagBits PipelineStageFromString(std::string enumName) {
	    return getEnumFromString(VkPipelineStageFlagBitsMap, enumName);
	}
	inline static unordered_map<string, VkPolygonMode> VkPolygonModeMap = {
		{"fill", VK_POLYGON_MODE_FILL},
		{"line", VK_POLYGON_MODE_LINE},
		{"point", VK_POLYGON_MODE_POINT},
		{"fillRectangleNv", VK_POLYGON_MODE_FILL_RECTANGLE_NV},
		{"maxEnum", VK_POLYGON_MODE_MAX_ENUM}
	}
	inline VkPolygonMode PolygonModeFromString(std::string enumName) {
	    return getEnumFromString(VkPolygonModeMap, enumName);
	}
	inline static unordered_map<string, VkShaderStageFlagBits> VkShaderStageFlagBitsMap = {
		{"vertex", VK_SHADER_STAGE_VERTEX_BIT},
		{"tessellationControl", VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT},
		{"tessellationEvaluation", VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT},
		{"geometry", VK_SHADER_STAGE_GEOMETRY_BIT},
		{"fragment", VK_SHADER_STAGE_FRAGMENT_BIT},
		{"compute", VK_SHADER_STAGE_COMPUTE_BIT},
		{"allGraphics", VK_SHADER_STAGE_ALL_GRAPHICS},
		{"all", VK_SHADER_STAGE_ALL},
		{"raygenKhr", VK_SHADER_STAGE_RAYGEN_BIT_KHR},
		{"anyHitKhr", VK_SHADER_STAGE_ANY_HIT_BIT_KHR},
		{"closestHitKhr", VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR},
		{"missKhr", VK_SHADER_STAGE_MISS_BIT_KHR},
		{"intersectionKhr", VK_SHADER_STAGE_INTERSECTION_BIT_KHR},
		{"callableKhr", VK_SHADER_STAGE_CALLABLE_BIT_KHR},
		{"taskExt", VK_SHADER_STAGE_TASK_BIT_EXT},
		{"meshExt", VK_SHADER_STAGE_MESH_BIT_EXT},
		{"subpassShadingHuawei", VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI},
		{"clusterCullingHuawei", VK_SHADER_STAGE_CLUSTER_CULLING_BIT_HUAWEI},
		{"raygenNv", VK_SHADER_STAGE_RAYGEN_BIT_NV},
		{"anyHitNv", VK_SHADER_STAGE_ANY_HIT_BIT_NV},
		{"closestHitNv", VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV},
		{"missNv", VK_SHADER_STAGE_MISS_BIT_NV},
		{"intersectionNv", VK_SHADER_STAGE_INTERSECTION_BIT_NV},
		{"callableNv", VK_SHADER_STAGE_CALLABLE_BIT_NV},
		{"taskNv", VK_SHADER_STAGE_TASK_BIT_NV},
		{"meshNv", VK_SHADER_STAGE_MESH_BIT_NV},
		{"flagsMaxEnum", VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM}
	}
	inline VkShaderStageFlagBits ShaderStageFromString(std::string enumName) {
	    return getEnumFromString(VkShaderStageFlagBitsMap, enumName);
	}
}